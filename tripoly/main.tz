{ parameter
    (or (or (unit %dice) (string %join)) (or (unit %leave) (pair %setField nat string))) ;
  storage
    (pair (map nat (pair (nat %balance) (string %ipfslink)))
          (map address (pair (pair (string %name) (nat %position)) (nat %saved_co2_kilos)))) ;
  code { PUSH mutez 1000000 ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DROP ;
                 DUP ;
                 CDR ;
                 SENDER ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE
                   { SWAP ;
                     DIG 3 ;
                     DROP 3 ;
                     PUSH string "Please join the game first to play." ;
                     FAILWITH }
                   { PUSH nat 6 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     ADD ;
                     PUSH nat 17 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { PUSH bool True } { PUSH bool False } ;
                     PUSH nat 18 ;
                     DIG 2 ;
                     EDIV ;
                     IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                     CDR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     IF { PUSH nat 100 } { PUSH nat 0 } ;
                     DUP 3 ;
                     CDR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     DIG 3 ;
                     UPDATE ;
                     DUP 4 ;
                     BALANCE ;
                     COMPARE ;
                     GE ;
                     IF { SWAP ;
                          CDR ;
                          IF { SENDER ;
                               CONTRACT unit ;
                               IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                               DIG 3 ;
                               UNIT ;
                               TRANSFER_TOKENS ;
                               NIL operation ;
                               SWAP ;
                               CONS }
                             { DIG 2 ; DROP ; NIL operation } }
                        { SWAP ; DIG 3 ; DROP 2 ; NIL operation } ;
                     PAIR } ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SIZE ;
                 COMPARE ;
                 LT ;
                 IF { DROP 2 ; PUSH string "Please enter a name." ; FAILWITH }
                    { SENDER ;
                      DUP 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE
                        { DIG 2 ;
                          PUSH nat 0 ;
                          PUSH nat 0 ;
                          DIG 4 ;
                          PAIR ;
                          PAIR ;
                          DIG 2 ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          NIL operation ;
                          PAIR }
                        { DROP 4 ; PUSH string "You are already playing the game." ; FAILWITH } } ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR } }
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { DROP ;
                 DUP ;
                 CDR ;
                 SENDER ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE
                   { DROP 2 ;
                     PUSH string "You are not in the game, yet, no possible to leave." ;
                     FAILWITH }
                   { DROP ;
                     NONE (pair (pair string nat) nat) ;
                     SWAP ;
                     UPDATE ;
                     NIL operation ;
                     PAIR } ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { UNPAIR ;
                 DUP 3 ;
                 CAR ;
                 DUG 2 ;
                 PUSH address "tz1MEiHXRpHFmptzJyx4taqCmTHAYbcLpZUi" ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 3 ; PUSH string "Access denied." ; FAILWITH }
                    { DUG 2 ; PUSH nat 0 ; PAIR ; SOME ; DIG 2 ; UPDATE } ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }

