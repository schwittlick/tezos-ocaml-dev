{ parameter
    (or (or (or (nat %dice) (string %join)) (or (unit %leave) (mutez %payout)))
        (or (or (unit %refill) (pair %setField (pair (pair nat nat) (pair address mutez)) nat))
            (unit %support))) ;
  storage
    (pair (map nat
               (pair (pair (nat %co2_multiplier) (nat %current_stock))
                     (pair (address %token_address) (mutez %token_price))))
          (map address
               (pair (pair (pair (timestamp %last_dice_roll) (string %name))
                           (pair (nat %position) (nat %saved_co2_kilos)))
                     (list %supported_fields (pair (nat %co2_multiplier) (address %token_address)))))) ;
  code { PUSH nat 18 ;
         PUSH mutez 1000000 ;
         PUSH address "tz1MEiHXRpHFmptzJyx4taqCmTHAYbcLpZUi" ;
         DIG 3 ;
         UNPAIR ;
         DUP 5 ;
         DUP 3 ;
         CAR ;
         SIZE ;
         COMPARE ;
         LT ;
         IF { DROP 5 ;
              PUSH string "There are not enough NFTs in the storage, yet." ;
              FAILWITH }
            { IF_LEFT
                { IF_LEFT
                    { DIG 2 ;
                      DROP ;
                      IF_LEFT
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SWAP ;
                          PUSH nat 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          LT ;
                          PUSH nat 6 ;
                          DUP 3 ;
                          COMPARE ;
                          GT ;
                          OR ;
                          IF { SWAP ;
                               DIG 3 ;
                               DIG 4 ;
                               DROP 4 ;
                               PUSH string "You can only step at least 1 and maximum 6 fields." ;
                               FAILWITH }
                             { SENDER ;
                               DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               IF_NONE
                                 { SWAP ;
                                   DIG 2 ;
                                   DIG 4 ;
                                   DIG 5 ;
                                   DROP 5 ;
                                   PUSH string "Please join the game first to play." ;
                                   FAILWITH }
                                 { PUSH int 100 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   ADD ;
                                   NOW ;
                                   COMPARE ;
                                   LT ;
                                   IF { SWAP ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 5 ;
                                        DIG 6 ;
                                        DROP 6 ;
                                        PUSH string "You can only roll the dice once every 100 seconds." ;
                                        FAILWITH }
                                      { DIG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        ADD ;
                                        DIG 6 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        EDIV ;
                                        IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                                        CDR ;
                                        PUSH nat 17 ;
                                        DIG 2 ;
                                        COMPARE ;
                                        GT ;
                                        IF { PUSH bool True } { PUSH bool False } ;
                                        NIL (pair nat address) ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        IF { PUSH nat 100 } { PUSH nat 0 } ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        ADD ;
                                        DIG 3 ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        NOW ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 3 ;
                                        SWAP ;
                                        SOME ;
                                        DIG 3 ;
                                        UPDATE ;
                                        DUP 4 ;
                                        BALANCE ;
                                        COMPARE ;
                                        GE ;
                                        IF { SWAP ;
                                             IF { SENDER ;
                                                  CONTRACT unit ;
                                                  IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                                                  DIG 3 ;
                                                  UNIT ;
                                                  TRANSFER_TOKENS ;
                                                  NIL operation ;
                                                  SWAP ;
                                                  CONS }
                                                { DIG 2 ; DROP ; NIL operation } }
                                           { SWAP ; DIG 3 ; DROP 2 ; NIL operation } ;
                                        PAIR } } } ;
                          DUP ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR }
                        { DIG 2 ;
                          DIG 3 ;
                          DROP 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SWAP ;
                          PUSH nat 1 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SIZE ;
                          COMPARE ;
                          LT ;
                          IF { DROP 2 ; PUSH string "Please enter a name." ; FAILWITH }
                             { SENDER ;
                               DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET ;
                               IF_NONE
                                 { NIL (pair nat address) ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   DIG 3 ;
                                   NOW ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 2 ;
                                   SWAP ;
                                   DIG 2 ;
                                   SWAP ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE }
                                 { DROP 4 ; PUSH string "You are already playing the game." ; FAILWITH } } ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } }
                    { DIG 3 ;
                      DIG 4 ;
                      DROP 2 ;
                      IF_LEFT
                        { DIG 2 ;
                          DROP 2 ;
                          DUP ;
                          CDR ;
                          SENDER ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE
                            { DROP 2 ;
                              PUSH string "You are not in the game, yet, no possible to leave." ;
                              FAILWITH }
                            { DROP ;
                              NONE (pair (pair (pair timestamp string) (pair nat nat)) (list (pair nat address))) ;
                              SWAP ;
                              UPDATE } ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          NIL operation ;
                          PAIR }
                        { DUP 3 ;
                          SENDER ;
                          COMPARE ;
                          NEQ ;
                          IF { DIG 2 ; DROP 2 ; PUSH string "Access denied." ; FAILWITH }
                             { DUP ;
                               BALANCE ;
                               COMPARE ;
                               GE ;
                               IF { DIG 2 ;
                                    CONTRACT unit ;
                                    IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                                    SWAP ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    NIL operation ;
                                    SWAP ;
                                    CONS }
                                  { DIG 2 ; DROP 2 ; NIL operation } } ;
                          PAIR } } }
                { DIG 3 ;
                  DIG 4 ;
                  DROP 2 ;
                  IF_LEFT
                    { IF_LEFT
                        { DIG 2 ; DROP 2 ; NIL operation ; PAIR }
                        { UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          DIG 2 ;
                          UNPAIR ;
                          DUP 6 ;
                          CAR ;
                          DIG 5 ;
                          PAIR ;
                          DUG 2 ;
                          PAIR ;
                          DIG 3 ;
                          DIG 3 ;
                          DIG 2 ;
                          UNPAIR ;
                          DIG 4 ;
                          UNPAIR ;
                          DIG 7 ;
                          SENDER ;
                          COMPARE ;
                          NEQ ;
                          IF { DROP 6 ; PUSH string "Access denied." ; FAILWITH }
                             { SWAP ;
                               DIG 3 ;
                               DIG 3 ;
                               PAIR ;
                               DIG 4 ;
                               DIG 3 ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               DIG 2 ;
                               UPDATE } ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          NIL operation ;
                          PAIR } }
                    { DIG 2 ;
                      DROP 2 ;
                      SENDER ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      SWAP ;
                      GET ;
                      IF_NONE
                        { PUSH string "You are not in the game." ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          SWAP ;
                          CAR ;
                          CDR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH string "Unknown kind of token" ; FAILWITH } {} ;
                          DUP ;
                          CDR ;
                          CDR ;
                          AMOUNT ;
                          COMPARE ;
                          NEQ ;
                          IF { PUSH string "Sorry, the token you are trying to purchase has a different price" ;
                               FAILWITH }
                             {} ;
                          PUSH nat 0 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH string "Sorry, the token you are trying to purchase is out of stock" ;
                               FAILWITH }
                             {} ;
                          DIG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          PUSH nat 1 ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          SUB ;
                          ABS ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          SOME ;
                          DIG 3 ;
                          UPDATE ;
                          SELF_ADDRESS ;
                          NIL (pair address (pair nat nat)) ;
                          SENDER ;
                          PUSH nat 1 ;
                          DUP 6 ;
                          CAR ;
                          CDR ;
                          SUB ;
                          ABS ;
                          PUSH nat 1 ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          CONS ;
                          SWAP ;
                          PAIR ;
                          DIG 2 ;
                          CDR ;
                          CAR ;
                          CONTRACT %transfer
                            (list (pair (address %from_)
                                        (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                          IF_NONE { PUSH string "Invalid external token contract" ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          NIL (pair address (list (pair address (pair nat nat)))) ;
                          DIG 3 ;
                          CONS ;
                          TRANSFER_TOKENS ;
                          SELF_ADDRESS ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                          AMOUNT ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          DIG 2 ;
                          NIL operation ;
                          DIG 2 ;
                          CONS ;
                          DIG 2 ;
                          CONS ;
                          PAIR } ;
                      SWAP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PAIR ;
                      SWAP ;
                      CAR ;
                      PAIR } } } } }

